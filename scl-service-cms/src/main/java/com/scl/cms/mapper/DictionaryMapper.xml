<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.scl.cms.mapper.DictionaryMapper" >
  <resultMap id="BaseResultMap" type="com.scl.cms.domain.Dictionary" >
    <id column="tb_id" property="id" jdbcType="VARCHAR" />
    <result column="tb_code" property="code" jdbcType="VARCHAR" />
    <result column="tb_name" property="name" jdbcType="VARCHAR" />
    <result column="tb_name_en" property="nameEn" jdbcType="VARCHAR" />
    <result column="tb_parent_id" property="parentId" jdbcType="VARCHAR" />
    <result column="tb_root_id" property="rootId" jdbcType="VARCHAR" />
    <result column="tb_level" property="level" jdbcType="INTEGER" />
    <result column="tb_sort" property="sort" jdbcType="INTEGER" />
    <result column="tb_value" property="value" jdbcType="VARCHAR" />
    <result column="tb_desc" property="desc" jdbcType="VARCHAR" />
    <result column="tb_whether_system" property="whetherSystem" jdbcType="INTEGER" />
    <result column="tb_status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    tb.id as tb_id, tb.code as tb_code, tb.name as tb_name, tb.name_en as tb_name_en, 
    tb.parent_id as tb_parent_id, tb.root_id as tb_root_id, tb.level as tb_level, tb.sort as tb_sort, 
    tb.value as tb_value, tb.desc as tb_desc, tb.whether_system as tb_whether_system, 
    tb.status as tb_status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from scl_common_dict tb
    where tb.id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from scl_common_dict
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.scl.cms.domain.Dictionary" >
    insert into scl_common_dict (id, code, name, 
      name_en, parent_id, root_id, 
      level, sort, value, 
      desc, whether_system, status
      )
    values (#{id,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{nameEn,jdbcType=VARCHAR}, #{parentId,jdbcType=VARCHAR}, #{rootId,jdbcType=VARCHAR}, 
      #{level,jdbcType=INTEGER}, #{sort,jdbcType=INTEGER}, #{value,jdbcType=VARCHAR}, 
      #{desc,jdbcType=VARCHAR}, #{whetherSystem,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.scl.cms.domain.Dictionary" >
    insert into scl_common_dict
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="nameEn != null" >
        name_en,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="rootId != null" >
        root_id,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="sort != null" >
        sort,
      </if>
      <if test="value != null" >
        value,
      </if>
      <if test="desc != null" >
        desc,
      </if>
      <if test="whetherSystem != null" >
        whether_system,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="nameEn != null" >
        #{nameEn,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="rootId != null" >
        #{rootId,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="value != null" >
        #{value,jdbcType=VARCHAR},
      </if>
      <if test="desc != null" >
        #{desc,jdbcType=VARCHAR},
      </if>
      <if test="whetherSystem != null" >
        #{whetherSystem,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.scl.cms.domain.Dictionary" >
    update scl_common_dict
    <set >
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="nameEn != null" >
        name_en = #{nameEn,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="rootId != null" >
        root_id = #{rootId,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="value != null" >
        value = #{value,jdbcType=VARCHAR},
      </if>
      <if test="desc != null" >
        desc = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="whetherSystem != null" >
        whether_system = #{whetherSystem,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.scl.cms.domain.Dictionary" >
    update scl_common_dict
    set code = #{code,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      name_en = #{nameEn,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=VARCHAR},
      root_id = #{rootId,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER},
      sort = #{sort,jdbcType=INTEGER},
      value = #{value,jdbcType=VARCHAR},
      desc = #{desc,jdbcType=VARCHAR},
      whether_system = #{whetherSystem,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <resultMap id="BaseResultMapWithChildrenDict" type="com.scl.cms.domain.Dictionary" extends="BaseResultMap">
    <collection property="childrenDict" ofType="com.scl.cms.domain.Dictionary" column="tb_id" select="listChildrenDictByParentId"/>
  </resultMap>

  <select id="listChildrenDictByParentId" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List"/>
    FROM scl_common_dict tb
    WHERE tb.parent_id = #{id,jdbcType=VARCHAR}
  </select>

  <select id="getAll" resultMap="BaseResultMapWithChildrenDict">
    SELECT <include refid="Base_Column_List"/>
    FROM scl_common_dict tb
--     WHERE tb.parent_id IS NULL
  </select>

  <select id="getByCode" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List"/>
    FROM scl_common_dict tb
    WHERE tb.code = #{code,jdbcType=VARCHAR}
  </select>

  <select id="getByCodeWithChildren" resultMap="BaseResultMapWithChildrenDict">
    SELECT <include refid="Base_Column_List"/>
    FROM scl_common_dict tb
    WHERE tb.code = #{code,jdbcType=VARCHAR}
  </select>


  <!--分页查询-->
  <sql id="pageParam">
    AND tb.parent_id = #{parentId, jdbcType=VARCHAR}
  </sql>
  <select id="listPage" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List"/>
    FROM scl_common_dict tb
    <where>
      <include refid="pageParam"/>
    </where>
  </select>


</mapper>